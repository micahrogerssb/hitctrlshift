---
import '../styles/fonts.css';
import Footer from '../components/Footer.astro';
import LoadingBackground from '../components/LoadingBackground.astro';
import CosmicBackground from '../components/CosmicBackground.astro';
import ParticleEffect from '../components/ui/ParticleEffect.astro';
import ScanLines from '../components/ui/ScanLines.astro';
import TriangleBackground from '../components/ui/TriangleBackground.astro';
import Header from '../components/Header.astro';
import SlidingMenu from '../components/SlidingMenu.astro';

interface Props {
  title: string;
  fullWidth?: boolean;
  isHomePage?: boolean;
}

const { title, fullWidth = false, isHomePage = false } = Astro.props;

// Detect mobile user agent
const isMobile = Astro.request.headers.get('user-agent')?.match(
  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i
);
---

<!doctype html>
<html lang="en" class="bg-[#0a0a0a]">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="CtrlShift - Political and Economic Reporting" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="theme-color" content="#0a0a0a" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <slot name="head" />
  </head>
  <body class="text-white min-h-screen flex flex-col relative antialiased selection:bg-punk-red/30">
    <LoadingBackground />
    {!isMobile && (
      <>
        <CosmicBackground />
        <ParticleEffect />
        <TriangleBackground />
        <ScanLines />
      </>
    )}
    <Header isHomePage={isHomePage} />
    <SlidingMenu />
    <main class:list={[
      "flex-grow container mx-auto px-4 flex items-center justify-center",
      fullWidth ? "max-w-[90vw]" : "",
      isMobile ? "transform-gpu" : ""
    ]}>
      <div class="w-full">
        <slot />
      </div>
    </main>
    <Footer />

    {isMobile && (
      <style is:inline>
        /* Critical mobile optimizations */
        :root {
          --vh: 1vh;
        }

        html, body {
          height: 100%;
          height: calc(var(--vh, 1vh) * 100);
          overscroll-behavior-y: none;
        }
        
        body {
          transform: translateZ(0);
          -webkit-font-smoothing: antialiased;
          text-rendering: optimizeLegibility;
        }

        img {
          content-visibility: auto;
        }

        * {
          -webkit-tap-highlight-color: transparent;
        }
      </style>

      <script is:inline>
        // Fix mobile viewport height
        function setVH() {
          let vh = window.innerHeight * 0.01;
          document.documentElement.style.setProperty('--vh', `${vh}px`);
        }
        setVH();
        window.addEventListener('resize', setVH);
      </script>
    )}
  </body>
</html>